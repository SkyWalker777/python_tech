Pandas 的 Categorical 数据类型可以降低数据存储提升计算速度
-------------------------------------------------------

读取数据
~~~~~~~~~~~

.. code:: ipython3

    import pandas as pd

.. code:: ipython3

    df = pd.read_csv("./datas/movielens-1m/users.dat",
                     sep="::",
                     engine="python",
                     header=None,
                     names="UserID::Gender::Age::Occupation::Zip-code".split("::"))

.. code:: ipython3

    df.head()

.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>UserID</th>
          <th>Gender</th>
          <th>Age</th>
          <th>Occupation</th>
          <th>Zip-code</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>0</td>
          <td>1</td>
          <td>F</td>
          <td>1</td>
          <td>10</td>
          <td>48067</td>
        </tr>
        <tr>
          <td>1</td>
          <td>2</td>
          <td>M</td>
          <td>56</td>
          <td>16</td>
          <td>70072</td>
        </tr>
        <tr>
          <td>2</td>
          <td>3</td>
          <td>M</td>
          <td>25</td>
          <td>15</td>
          <td>55117</td>
        </tr>
        <tr>
          <td>3</td>
          <td>4</td>
          <td>M</td>
          <td>45</td>
          <td>7</td>
          <td>02460</td>
        </tr>
        <tr>
          <td>4</td>
          <td>5</td>
          <td>M</td>
          <td>25</td>
          <td>20</td>
          <td>55455</td>
        </tr>
      </tbody>
    </table>
    </div>



.. code:: ipython3

    df.info()


.. parsed-literal::

    <class 'pandas.core.frame.DataFrame'>
    RangeIndex: 6040 entries, 0 to 6039
    Data columns (total 5 columns):
    UserID        6040 non-null int64
    Gender        6040 non-null object
    Age           6040 non-null int64
    Occupation    6040 non-null int64
    Zip-code      6040 non-null object
    dtypes: int64(3), object(2)
    memory usage: 236.1+ KB


.. code:: ipython3

    df.info(memory_usage="deep")


.. parsed-literal::

    <class 'pandas.core.frame.DataFrame'>
    RangeIndex: 6040 entries, 0 to 6039
    Data columns (total 5 columns):
    UserID        6040 non-null int64
    Gender        6040 non-null object
    Age           6040 non-null int64
    Occupation    6040 non-null int64
    Zip-code      6040 non-null object
    dtypes: int64(3), object(2)
    memory usage: 873.4 KB


.. code:: ipython3

    df_cat = df.copy()
    df_cat.head()




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>UserID</th>
          <th>Gender</th>
          <th>Age</th>
          <th>Occupation</th>
          <th>Zip-code</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>0</td>
          <td>1</td>
          <td>F</td>
          <td>1</td>
          <td>10</td>
          <td>48067</td>
        </tr>
        <tr>
          <td>1</td>
          <td>2</td>
          <td>M</td>
          <td>56</td>
          <td>16</td>
          <td>70072</td>
        </tr>
        <tr>
          <td>2</td>
          <td>3</td>
          <td>M</td>
          <td>25</td>
          <td>15</td>
          <td>55117</td>
        </tr>
        <tr>
          <td>3</td>
          <td>4</td>
          <td>M</td>
          <td>45</td>
          <td>7</td>
          <td>02460</td>
        </tr>
        <tr>
          <td>4</td>
          <td>5</td>
          <td>M</td>
          <td>25</td>
          <td>20</td>
          <td>55455</td>
        </tr>
      </tbody>
    </table>
    </div>



2、使用categorical类型降低存储量
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: ipython3

    df_cat["Gender"] = df_cat["Gender"].astype("category")

.. code:: ipython3

    df_cat.info(memory_usage="deep")


.. parsed-literal::

    <class 'pandas.core.frame.DataFrame'>
    RangeIndex: 6040 entries, 0 to 6039
    Data columns (total 5 columns):
    UserID        6040 non-null int64
    Gender        6040 non-null category
    Age           6040 non-null int64
    Occupation    6040 non-null int64
    Zip-code      6040 non-null object
    dtypes: category(1), int64(3), object(1)
    memory usage: 513.8 KB


.. code:: ipython3

    df_cat.head()




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>UserID</th>
          <th>Gender</th>
          <th>Age</th>
          <th>Occupation</th>
          <th>Zip-code</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>0</td>
          <td>1</td>
          <td>F</td>
          <td>1</td>
          <td>10</td>
          <td>48067</td>
        </tr>
        <tr>
          <td>1</td>
          <td>2</td>
          <td>M</td>
          <td>56</td>
          <td>16</td>
          <td>70072</td>
        </tr>
        <tr>
          <td>2</td>
          <td>3</td>
          <td>M</td>
          <td>25</td>
          <td>15</td>
          <td>55117</td>
        </tr>
        <tr>
          <td>3</td>
          <td>4</td>
          <td>M</td>
          <td>45</td>
          <td>7</td>
          <td>02460</td>
        </tr>
        <tr>
          <td>4</td>
          <td>5</td>
          <td>M</td>
          <td>25</td>
          <td>20</td>
          <td>55455</td>
        </tr>
      </tbody>
    </table>
    </div>



.. code:: ipython3

    df_cat["Gender"].value_counts()




.. parsed-literal::

    M    4331
    F    1709
    Name: Gender, dtype: int64



3、提升运算速度
~~~~~~~~~~~~~~~

.. code:: ipython3

    %timeit df.groupby("Gender").size()


.. parsed-literal::

    564 µs ± 10.8 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each)


.. code:: ipython3

    %timeit df_cat.groupby("Gender").size()


.. parsed-literal::

    324 µs ± 5 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each)


