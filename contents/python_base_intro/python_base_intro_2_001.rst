Linux 基础命令
##################################################################################

操作系统
**********************************************************************************

* 常见的操作系统

::

	Windows
	mac OS
	Linux
	iOS
	Android

* 操作系统的定义

操作系统直接运行在计算机上的系统软件， 它是控制硬件和支持软件运行的计算机程序。

|image0|

* 操作系统的作用

向下控制硬件向上支持软件的运行，具有承上启下的作用。

|image1|

* 小结

操作系统是一个控制硬件和支持软件运行的计算机程序，只有安装了操作系统计算机才能进行正常工作。

虚拟机软件
**********************************************************************************

* 虚拟机软件的介绍

它是能够虚拟出来计算机的一个软件。常用虚拟机软件:

::

	Vmware
	VirtualBox

.. tip::

	只有安装了虚拟机软件才可以创建虚拟机，当然通过虚拟机软件还可以创建多个虚拟机。

* 虚拟机的介绍

就是模拟一个真实的计算机，好比一个虚拟的电脑，对于快速学习一个新的操作系统就可以通过虚拟机来完成。

|image2|

.. tip::

	虚拟机之间是相互独立的，删除虚拟机不会对其它虚拟机产生影响，当然也不会对电脑本身生影响.

* 虚拟机软件的安装说明

::

	Windows和Linux下载VMware Workstation版的安装包
	mac OS下载VMware Fusion版的安装包
	当对应的安装包下载完成以后双击进行安装就可以了
	当虚拟机软件安装成功就可以创建虚拟机了

* 小结

| 对应快速学习一个新的操作系统，我们可以借助虚拟机来完成。
| 虚拟机软件、虚拟机、操作系统它们三者之间的关系： 

|image3|

Linux 内核及发行版
**********************************************************************************

* Linux 内核

Linux内核是操作系统内部操作和控制硬件设备的核心程序，它是由芬兰人林纳斯开发的。

内核效果图:

|image4|

.. tip::

	真正操作和控制硬件是由内核来完成的，操作系统是基于内核开发出来的。

* Linux 发行版

是Linux内核与各种常用软件的组合产品，通俗来说就是我们常说的Linux操作系统。

常用的Linux发行版:

::

	Ubuntu
	CentOS
	Redhat

Linux发行版效果图:

|image5|

* 小结

| Linux内核是Linux操作系统管理硬件设备的核心程序
| 常用的Linux操作系统都是基于Linux内核开发出来的

查看目录命令
**********************************************************************************

* 查看目录命令的使用

命令	说明

::

	ls	查看当前目录信息
	tree	以树状方式显示目录信息

ls命令效果:

::

	➜  ~ ls
	Applications               Library                    Public                     logs                       技术资料
	Applications (Parallels)   Movies                     PycharmProjects            mq_cluster_sscp.flink.data 文档资料

tree命令效果:

::

	➜  ~ tree -L 1
	.
	├── Applications
	├── Applications\ (Parallels)
	├── CLionProjects

* 查看当前目录路径

::

	命令	说明
	pwd	查看当前目录路径

pwd命令效果:

::

	➜  ~ pwd
	/Users/lilizhao

* 清除终端内容

::

	命令	说明
	clear	清除终端内容

命令效果

::

	➜  ~ clear
	➜ 

* 小结

| ls和tree是我们查看目录信息最常用的命令
| ls只能查看一层目录信息
| tree可以查看多层目录信息。

切换目录命令
**********************************************************************************

* 切换目录命令的使用

::

	命令	说明
	cd 目录	切换到指定目录
	cd ~	切换到当前用户的主目录
	cd ..	切换到上一级目录
	cd .	切换到当前目录
	cd -	切换到上一次目录

.. tip::

	| cd命令切换目录时，这个目录必须存在。
	| cd 后面不写目录等价于cd ~

* 小结

	cd命令是完成目录切换操作的，当切换目录时，这个目录必须存在。

绝对路径和相对路径
**********************************************************************************

* 绝对路径

从根目录算起的路径叫做绝对路径, 例如

::

	/home/python/Desktop
	/usr/bin

* 相对路径

从当前目录算起的路径叫做相对路径, 例如

::

	./test/hello
	../static/images

* 绝对路径和相对路径的使用

::

	使用绝对路径切换到桌面
	cd /home/python/Desktop

	在下载目录以相对路径切换到桌面
	cd Downloads
	cd ../Desktop

在桌面使用相对路径切换到上一级目录的上一级目录 cd Desktop cd ../../

* 自动补全

::

	当敲出 文件或者目录或者命令 的前几个字母之后，按下 tab 键，如果输入的没有歧义，系统会自动补全
	当切换目录或者使用命令的时候，如果不确定当前目录下有那些子目录或者其它命令，可以通过两次tab键查看

* 小结

绝对路径和相对路径是路径的两种表现形式，应遵循最短路径原则(使用最短的路径操作某个文件或者目录)。

::

	如果切换的目录离当前目录近可以使用相对路径
	如果切换的目录离根目录近可以使用绝对路径
	如果切换的目录离根目录和当前目录都一样那么使用绝对路径，因为这样路径很清楚和明确，方便阅读。

创建、删除文件及目录命令
**********************************************************************************

* 创建、删除文件及目录命令的使用

::

	命令	说明
	touch 文件名	创建指定文件
	mkdir 目录名	创建目录(文件夹)
	rm 文件名或者目录名	删除指定文件或者目录
	rmdir 目录名	删除空目录

.. tip::

	rm命令想要删除目录需要加上-r选项，-r表示递归删除目录及其内容

* 小结

::

	touch 表示创建文件
	mkdir 表示创建目录
	rm 表示删除文件或者目录，如果删除目录需要使用 -r 选项，-r 表示递归删除目录及其内容
	rmdir 表示删除空目录

复制、移动文件及目录命令
**********************************************************************************

* 复制、移动文件及目录命令的使用

::

	命令	说明
	cp	拷贝文件、拷贝目录
	mv	移动文件、移动目录、重命名

.. note::

	拷贝目录需要加上-r选项，-r表示递归拷贝目录及其内容

* 小结

::

	cp：拷贝目录需要加上 –r 选项
	mv：移动目录不需要加选项
	mv：命令还可以重命名文件和目录

终端命令格式的组成
**********************************************************************************

* 终端命令格式说明

command [-options] [parameter]

每项信息的说明:

::

	command：命令名, 比如: ls、pwd
	[-options]：选项，可以有零个、一个或者多个选项，多个选项可以合并，比如使用的 -r 就是选项。
	[parameter]：参数，可以有零个、一个 或者 多个参数， 比如: touch 文件名、mkdir 目录名、cd 目标目录(路径)，这些文件名和目录名都是参数。
	[]：代表可选

* 小结

::

	终端命令完整格式: 命令名 选项(可选) 参数(可选)
	选项：用于调整命令的功能，比如：-r选项调整cp命令的功能。
	选项可以分为短选项和长选项
	短选项的格式: '-'后面接单个字母, 比如:-r
	长选项的格式: '--'后面接单词, 比如:--help
	参数：命令的操作对象，一般是文件名或者目录名。
	对于命令，它的选项和参数一般情况下没有顺序要求，但是scp命令是必须先选项然后在跟上参数。

查看命令帮助
**********************************************************************************

* 查看命令帮助方式

::

	--help 使用说明: 命令 --help
	man 使用说明: man 命令

查看命令帮助的目的说明:

::

	查看命令帮助目的是查看命令选项信息的

man命令的说明:

::

	操作键	说明
	空格	显示下一屏信息
	回车	显示下一行信息
	b	显示上一屏信息
	f	显示下一屏信息
	q	退出

* 小结

::

	--help和man是查看命令帮助的两种方式，主要是查看命令所对应的选项信息

ls命令选项
**********************************************************************************

*  ls命令选项使用

::

	命令选项 	说明
	-l 	以列表方式显示
	-h 	件大小单位显示，默认是字节
	-a 	显示隐藏文件和隐藏目录

ls命令选项效果图: 

::

	ls -al
	total 16
	drwxr-xr-x   4 lilizhao  1603212982  128 11 12 14:23 .
	drwxr-xr-x  14 lilizhao  1603212982  448 11  6 14:31 ..
	-rw-r--r--   1 lilizhao  1603212982   97 10 19 09:15 breadcrumbs.html
	-rw-r--r--   1 lilizhao  1603212982  148 10 19 09:15 layout.html

每项信息说明:

|image6|

* 小结

::

	ls不同选项会呈现不同的显示方式，其中-l和-a选项最常用

mkdir 和 rm 命令选项
**********************************************************************************

* mkdir命令选项

::

	命令选项 	说明
	-p 	创建所依赖的文件夹

* rm命令选项

::

	命令选项 	说明
	-i 	交互式提示
	-r 	递归删除目录及其内容
	-f 	强制删除，忽略不存在的文件，无需提示
	-d 	删除空目录

* 小结

::

	创建嵌套文件夹使用 “mkdir –p” 嵌套目录
	删除空目录使用 “rmdir 目录名” 或者 “rm –d 目录名”
	删除非空目录使用 “rm –r 目录名”


cp 和 mv 命令选项
**********************************************************************************

* cp命令选项

::

	命令选项 	说明
	-i 	交互式提示
	-r 	递归拷贝目录及其内容
	-v 	显示拷贝后的路径描述
	-a 	保留文件的原有权限

.. tip::

	-a选项说明:-a 选项还支持拷贝文件夹并且文件夹中的文件权限不丢失

* mv命令选项

::

	命令选项 	说明
	-i 	交互式提示
	-v 	显示移动后的路径描述

* 小结

::

	拷贝文件防止覆盖使用 “cp –i” 操作
	拷贝文件夹使用 “cp –r” 操作，拷贝文件夹并且文件权限不丢失使用 “cp –a” 操作。
	移动文件防止覆盖使用 “mv –i” 操作
	移动文件夹直接使用 “mv” 即可，“mv” 还可以给文件和文件夹重命名。

Linux 高级命令
##################################################################################

重定向命令
**********************************************************************************

* 重定向命令的介绍

重定向也称为输出重定向，把在终端执行命令的结果保存到目标文件。

* 重定向命令的使用

::

	命令 	说明
	> 	如果文件存在会覆盖原有文件内容，相当于文件操作中的 ‘w’ 模式
	>> 	如果文件存在会追加写入文件末尾，相当于文件操作中的 ‘a’ 模式

.. note::

	只要在终端能显示信息的命令都可以使用重定向，比如: tree

* 小结

::

	终端内容保存到文件使用重定向有两种方式: > 和 >>
	> 表示每次只写入最新的数据，原有数据不保留。
	>> 表示每次在原有数据的基础上进行追加，原有数据会保留。

查看文件内容命令
**********************************************************************************

* 查看文件内容命令的使用

::

	命令 	说明
	cat 	查看小型文件
	more 	分屏查看大型文件

.. tip::

	| cat 命令结合重定向可以完成多个文件的合并
	| gedit 文件编辑命令，可以查看和编辑文件

more 命令: 当查看内容信息过长无法在一屏上显示时，可以使用 more 命令在终端分配显示文件内容。

操作键说明:

::

	操作键 	说明
	空格 	显示下一屏信息
	回车 	显示下一行信息
	b 	显示上一屏信息
	f 	显示下一屏信息
	q 	退出

* 管道(|)命令的使用

管道(|)：一个命令的输出可以通过管道做为另一个命令的输入，可以理解成是一个容器，存放在终端显示的内容。

.. tip::

	管道 (|) 一般结合 more 命令使用，主要是分配查看终端显示内容。

* 小结

::

	查看小文件使用 cat 命令
	分屏查看大型文件使用 more 命令，
	查看终端显示内容并分屏展示，使用管道 (|) 结合 more 命令。

链接命令
**********************************************************************************

* 链接命令的介绍

链接命令是创建链接文件，链接文件分为: 软链接和硬链接

::

	命令 	说明
	ln -s 	创建软链接
	ln 	创建硬链接

* 软链接

类似于 Windows 下的快捷方式，当一个源文件的目录层级比较深，我们想要方便使用它可以给源文件创建一个软链接。``ln -s 源文件 连接文件``

.. tip::

	| 如果软链接和源文件不在同一个目录，源文件要使用绝对路径，不能使用相对路径。
	| 删除源文件则软链接失效
	| 可以给目录创建软链接

* 软链接小结

| 软链接的作用是方便文件的快速访问，比如:给一个复杂路径下的文件创建一个软链接，以后就可以通过软链接完成快速访问操作。
| 创建软链接命令格式: ln -s 源文件路径(使用绝对路径) 软链接

* 硬链接

类似于源文件的一个别名，也就是说这两个名字指向的是同一个文件数据。

|image7|

.. tip::

	| 创建硬链接使用相对路径和绝对路径都可以
	| 删除源文件，硬链接还可以访问到数据。
	| 创建硬链接，硬链接数会加1，删除源文件或者硬链接，硬链接数会减 1。
	| 创建软链接，硬链接数不会加1
	| 不能给目录创建硬链接

硬链接数: 硬链接数就是文件数据被文件名使用的次数, 好比引用计数

* 硬链接小结

	| 硬链接的作用是可以给重要文件创建硬链接，能够防止文件数据被误删。
	| 删除源文件，软链接失效，但是硬链接依然可以使用。
	| 创建硬链接命令格式: ln 源文件路径 硬链接

文本搜索命令
**********************************************************************************

* grep命令的使用

	| 命令 	说明
	| grep 	文本搜索

grep 命令效果:

.. code-block:: shell

	➜  logs cat hello.py
	AAaaA
	BB
	CCC
	➜  logs grep 'aa' hello.py
	AAaaA

* grep 命令选项的使用

	| 命令选项 	说明
	| -i 	忽略大小写
	| -n 	显示匹配行号
	| -v 	显示不包含匹配文本的所有行

* grep 命令结合正则表达式的使用

	| 正则表达式 	说明
	| ^ 	以指定字符串开头
	| $ 	以指定字符串结尾
	| . 	匹配一个非换行符的字符

* 扩展

	| grep 命令还可以文本搜索管道中的内容，比如: ls / | grep ‘lib’
	| 在使用 grep 命令的时候还可以省略搜索内容的引号，比如: ls / | grep lib， grep hello 1.txt

* 小结

	| grep 命令是完成文本搜索操作的
	| 文本搜索的命令格式: grep 选项 文本搜索内容

查找文件命令
**********************************************************************************

* find 命令及选项的使用

	| 命令 	说明
	| find 	在指定目录下查找文件(包括目录)

find 命令选项: 

	| 选项 	说明
	| -name 	根据文件名(包括目录名)字查找

find 命令及选项效果如下:

.. code-block:: shell

	➜  logs find ./ -name test
	.//test
	.//py3/lib/python3.7/site-packages/jedi/third_party/django-stubs/django-stubs/test
	.//py3/lib/python3.7/site-packages/tornado/test
	.//py3/lib/python3.7/site-packages/joblib/test

* find 命令结合通配符的使用

通配符: 是一种特殊语句，主要有星号 (*) 和问号 (?)，用来模糊搜索文件

	| 通配符 	说明
	| * 	代表0个或多个任意字符
	| ? 	代表任意一个字符

*通配符的效果:

.. code-block:: shell

	➜  logs find . -name "arthas*"
	./arthas-cache
	./arthas
	./arthas/arthas.log
	./arthas/classdump/com.taobao.arthas.agent.ArthasClassloader-12a027c7/com/taobao/arthas
	./arthas/arthas.log.2019-12-19.0
	./arthas-3.1.7-bin.zip.1
	./arthas-3.1.7-bin.zip

?通配符的效果图:

.. code-block:: shell

	➜  logs find . -name "arthas.lo?"
	./arthas/arthas.log

扩展: 通配符不仅能结合 find 命令使用，还可以结合其它命令使用, 比如: ls、mv、cp 等，这里需要注意只有 find 命令使用通配符需要加上引号。

* 小结

	| find命令是完成查找文件操作的
	| 查找文件的命令格式: find 指定查找目录 -name "文件名"

压缩和解压缩命令
**********************************************************************************

* 压缩格式的介绍

Linux 默认支持的压缩格式:

	| .gz
	| .bz2
	| .zip

说明:

	| gz 和 .bz2 的压缩包需要使用 tar 命令来压缩和解压缩
	| zip 的压缩包需要使用 zip 命令来压缩，使用 unzip 命令来解压缩

压缩目的: 节省磁盘空间

* tar 命令及选项的使用

	| 命令 	说明
	| tar 	压缩和解压缩命令

tar 命令选项:

	| 选项 	说明
	| -c 	创建打包文件
	| -v 	显示打包或者解包的详细信息
	| -f 	指定文件名称, 必须放到所有选项后面
	| -z 	压缩或解压缩(.gz)
	| -j 	压缩或解压缩(.bz2)
	| -x 	解包
	| -C 	解压缩到指定目录

* zip 和 unzip 命令及选项的使用

	| 命令 	说明
	| zip 	压缩成.zip格式文件
	| unzip 	解压缩.zip格式文件

unzip 命令选项:

	| 选项 	说明
	| -d 	解压缩到指定目录

示例如下:

.. code-block:: shell

	➜  logs zip test.zip test.*
	  adding: test.out (deflated 88%)
	  adding: test.sh (deflated 14%)
	➜  logs unzip test.zip
	Archive:  test.zip
	replace test.out? [y]es, [n]o, [A]ll, [N]one, [r]ename: A
	  inflating: test.out
	  inflating: test.sh

.. tip::

	| 压缩文件尽量使用.gz格式，因为占用空间较少
	| 使用zip命令压缩的文件占用空间比较多, 当时比较通用，操作更加简单。

* 小结

	| .gz和.bz2的压缩文件使用tar命令来完成压缩和解压缩
	| .zip的压缩文件使用zip和unzip命令来完成压缩和解压缩

文件权限命令
**********************************************************************************

* chmod 命令的介绍

	| 命令 	说明
	| chmod 	修改文件权限

chmod 修改文件权限有两种方式:

	| 字母法
	| 数字法

* chmod 字母法的使用

角色说明:

	| 角色 	说明
	| u 	user, 表示该文件的所有者
	| g 	group, 表示用户组
	| o 	other, 表示其他用户
	| a 	all, 表示所有用户

权限设置说明:

	| 操作符 	说明
	| + 	增加权限
	| - 	撤销权限
	| = 	设置权限

权限说明:

	| 权限 	说明
	| r 	可读
	| w 	可写
	| x 	可执行
	| - 	无任何权限

示例如下:

.. code-block:: shell

	chmod u=r,g=-,o=rw test.out

* chmod 数字法的使用

数字法就是 “rwx” 这些权限也可以用数字来代替

权限说明:

	| 权限 	说明
	| r 	可读，权限值是4
	| w 	可写，权限值是2
	| x 	可执行，权限值是1
	| - 	无任何权限，权限值是0

示例如下:

.. code-block:: shell

	chmod 000 test.out

* 小结

	| 利用 chmod 命令可以控制文件的操作权限。
	| 字母法格式: chmod 不同角色设置的权限 文件
	| 数字法格式: chmod 不同角色的权限值 文件名

获取管理员权限的相关命令
**********************************************************************************

* sudo 命令的使用

	| 命令 	说明
	| sudo -s 	切换到root用户，获取管理员权限
	| sudo 	某个命令的执行需要获取管理员权限可以在执行命令前面加上sudo

示例如下:

.. code-block:: shell

	➜  logs touch /hello
	touch: /hello: Permission denied
	➜  logs sudo touch /hello
	Password:

.. tip::

	| 如果只是某次操作需要使用管理员权限建议使用 sudo , 也就是说临时使用管理器权限。
	| 如果大量操作都需要使用管理员权限 sudo –s, 但是操作需谨慎。

* whoami 命令的使用

	| 命令 	说明
	| whoami 	查看当前用户限

* exit 命令的使用

	| 命令 	说明
	| exit 	退出登录用户

.. tip::

	| 如果是切换后的登陆用户，退出则返回上一个登陆账号。
	| 如果是终端界面，退出当前终端。

* who 命令的使用

	| 命令 	说明
	| who 	查看所有的登录用户

示例:

.. code-block:: shell

	➜  logs who
	lilizhao console  Nov 12 11:51
	lilizhao ttys001  Nov 12 11:54
	lilizhao ttys002  Nov 12 13:38
	lilizhao ttys003  Nov 12 14:42
	lilizhao ttys004  Nov 12 14:42
	lilizhao ttys005  Nov 12 14:42
	lilizhao ttys006  Nov 12 14:42

* passwd 命令的使用

	| 命令 	说明
	| passwd 	修改用户密码，不指定用户默认修改当前登录用户密码

* which 命令的使用

	| 命令 	说明
	| which 	查看命令位置

* 关机和重启命令的使用

	| 命令 	说明
	| shutdown –h now 	立刻关机
	| reboot 	重启

* 小结

	| sudo 是临时获取管理员权限
	| sudo -s 是切换到管理员用户，一直使用管理员权限，需要谨慎操作。
	| exit 是退出当前用户
	| passwd 默认修改当前用户密码

用户相关操作
**********************************************************************************

* 创建用户

	| 命令 	说明
	| useradd 	创建(添加)用户

useradd 命令选项:

	| 选项 	说明
	| -m 	自动创建用户主目录,主目录的名字就是用户名
	| -g 	指定用户所属的用户组，默认不指定会自动创建一个同名的用户组

创建用户示例:

.. code-block:: shell

	sudo useradd -m llz

查看所有用户信息的文件效果:

.. code-block:: shell

	➜  logs cat /etc/passwd
	nobody:*:-2:-2:Unprivileged User:/var/empty:/usr/bin/false
	root:*:0:0:System Administrator:/var/root:/bin/sh
	daemon:*:1:1:System Services:/var/root:/usr/bin/false
	_uucp:*:4:4:Unix to Unix Copy Protocol:/var/spool/uucp:/usr/sbin/uucico
	_taskgated:*:13:13:Task Gate Daemon:/var/empty:/usr/bin/false
	_networkd:*:24:24:Network Services:/var/networkd:/usr/bin/false

说明:

	| useradd 命令的使用需要使用管理员权限，前面需要加上 sudo
	| 创建用户如果不指定用户组，默认会自动创建一个同名的用户组
	| 查看用户是否创建成功，可以查看/etc/passwd这个文件
	| 查看用户组是否创建成功，可以查看/etc/group这个文件

passwd 文件中的每项信息说明,以 root:x:0:0:root:/root:/bin/bash 为例:

	| 第一个：用户名
	| 第二个：密码占位符
	| 第三个：uid, 用户id
	| 第四个：gid, 用户所在组id
	| 第五个：用户描述, 可选，
	| 第六个：用户的主目录所在位置
	| 第七个：用户所用 shell 的类型，一般由bash或者sh，默认不设置是sh类型

group 文件中的每项信息说明, 以 laowang:x:1001: 为例:

	| 第一个：用户组名
	| 第二个：用户组密码占位符，一般Linux系统的用户组都没有密码的
	| 第三个：组id

id 命令查看用户信息: 

	| 命令 	说明
	| id 	查看用户信息

.. code-block:: shell

	➜  logs id lilizhao
	uid=1616171723(lilizhao) gid=1603212982 groups=1603212982,702(com.apple.loginwindow.netaccounts),12(everyone),62(netaccounts),80(admin),701(com.apple.sharepoint.group.1),33(_appstore),98(_lpadmin),100(_lpoperator),204(_developer),250(_analyticsusers),395(com.apple.access_ftp),704(com.apple.sharepoint.group.2),703(com.apple.access_loginwindow)

每项信息说明:

uid=1001(laowang) gid=1001(laowang) 组=1001(laowang)

	| 第一个: uid 表示用户id
	| 第二个: gid 表示用户组id
	| 第三个: 组 表示用户所在的用户组

* 设置密码

给其它用户设置密码，需要使用: sudo passwd 用户名

* 切换用户

	| 命令 	说明
	| su 	切换用户

语法格式: su - 用户名

	| 切换用户:
	| ➜  su - laowang
	| 密码:
	| ➜  whoami
	| laowang

在 laowang 用户使用 sudo -s 示例: 

.. code-block:: shell

	➜  whoami
	laowang
	➜  su - s
	laowang 不在 sudoers 文件中。[当前用户不在 sudo 用户组里面, 不能切换到管理员用户]

解决办法: 给laowang用户设置一个sudo附加组， 需要使用usermod修改用户信息

* 修改用户信息

	| 命令 	说明
	| usermod 	修改用户信息

usermod 选项: 

	| 命令 	说明
	| -G 	设置一个附加组
	| -g 	修改用户组

示例

.. code-block:: shell

	sudo usermod -G sudo laowang 给用户设置附加组
	id laowang
	uid=1001(laowang) gid=1001(laowang) 组=1001(laowang),27(sudo)

设置附加组sudo以后，在sudo -s 就可以切换到管理员用户

* 扩展: 删除附加组

	| 命令 	说明
	| gpasswd 	添加和删除附加组信息

gpasswd 命令选项: 

	| 选项 	说明
	| -a 用户名 	给用户添加附加组
	| -d 用户名 	给用户删除附加组

	| 删除附加组
	| sudo gpasswd -d laowang sudo

* 删除用户

	| 命令 	说明
	| userdel 	删除用户

userdel 命令选项:

	| 选项 	说明
	| -r 用户名 	删除用户主目录，必须要设置，否则用户主目录不会删除

说明: 删除用户，默认同名的用户组也会被删除

* 小结

	| 创建用户命令格式: sudo useradd -m 用户名, 默认会创建一个同名的用户组。
	| 查看用户信息使用 id 命令或者 /etc/passwd文件
	| 查看用户组信息使用 /etc/group文件
	| 给用户设置密码使用 sudo passwd 用户名
	| 切换用户使用 su - 用户名
	| 设置附加组使用 sudo usermod -G 组名 用户名
	| 删除用户使用 sudo userdel -r 用户名，默认会删除同名的用户组。

用户组相关操作
**********************************************************************************

* 创建用户组

::

	命令 	说明
	groupadd 	创建(添加)用户组

	sudo groupadd test
	grep test /test/group

* 创建用户并指定用户组

::

	sudo useradd -m -g test laowang

* 修改用户组

::

	sudo usermod -g abc laowang

* 删除用户组

::

	命令 	说明
	groupdel 	删除用户组

说明: 如果用户组下面有用户先删除用户在删除用户组

* 小结

	| 创建用户组使用: sudo groupadd 用户组名
	| 创建用户并指定用户组使用: sudo useradd -m -g 用户组 用户名
	| 修改用户组使用: sudo usermod -g 用户组 用户名
	| 删除用户组使用: sudo groupdel 用户组名

远程登录、远程拷贝命令
**********************************************************************************

* 远程登录、远程拷贝命令的介绍

::

	命令 	说明
	ssh 	远程登录
	scp 	远程拷贝

* ssh命令的使用

ssh是专门为远程登录提供的一个安全性协议，常用于远程登录，想要使用ssh服务，需要安装相应的服务端和客户端软件，当软件安装成功以后就可以使用ssh命令了，以后可以通过远程登录之间操作远程的服务器。

|image8|

软件安装步骤:

::

	假如Ubuntu作为服务端,需要安装ssh服务端软件. 执行命令: sudo apt-get install openssh-server
	客户端电脑如果是 macOS 系统则不需要安装 ssh 客户端软件，默认已经安装过了，直接可以使用 ssh 命令
	客户端电脑如果是Windows系统则需要安装OpenSSH for Windows这个软件

ssh命令格式: ssh 用户名@ip地址

.. tip::

	| 在一台电脑上可以安装安装ssh客户端和ssh服务端软件
	| 在Ubuntu安装ssh客户端命令: sudo apt-get install openssh-client

* scp 命令的使用

scp是基于ssh进行远程文件拷贝的命令，也就是说需要保证服务端和客户端电脑安装了相应的ssh软件，以后可以把我们写代码远程拷贝到服务器。

scp命令格式:

::

	远程拷贝文件
	    scp 本地文件 远程服务器用户名@远程服务器ip地址:指定拷贝到远程服务器的路径
	    scp 远程服务器用户名@远程服务器ip地址:远程服务器文件 指定拷贝到本地电脑的路径
	远程拷贝目标
	    scp -r 本地目录 远程服务器用户名@远程服务器ip地址:指定拷贝到远程服务器的路径
	    scp -r 远程服务器用户名@远程服务器ip地址:远程服务器目录 指定拷贝到本地电脑的路径
	    -r 表示递归拷贝整个目录

* FileZilla软件的使用

FileZilla 是一个免费开源的FTP软件, 使用可视化方式进行上传和下载文件。以后可以通过 FileZilla 来代替 scp 命令

* 小结

| ssh命令是远程登录主机电脑，相当于直接操作的是远程电脑。
| scp命令是可以完成远程拷贝操作，注意:拷贝文件夹需要加-r选项。
| 大量的文件上传和下载可以通过可视化工具FileZilla来完成。

编辑器 vim
**********************************************************************************

* vim 的介绍

vim 是一款功能强大的文本编辑器，也是早年 Vi 编辑器的加强版，它的最大特色就是使用命令进行编辑，完全脱离了鼠标的操作。

* vim 的工作模式

::

	命令模式
	编辑模式
	末行模式

说明: vim 打开文件进入的是命令模式

工作模式效果图: 

|image9|

.. tip::

	编辑模式和末行模式之间不能直接进行切换，都需要通过命令模式来完成。

* vim 的末行模式命令

::

	:w 保存
	:wq 保存退出
	:x 保存退出
	:q! 强制退出

* vim 的常用命令

::

	命令 	说明
	yy 	复制光标所在行
	p 	粘贴
	dd 	删除/剪切当前行
	V 	按行选中
	u 	撤销
	ctr+r 	反撤销
	>> 	往右缩进
	<< 	往左缩进
	:/搜索的内容 	搜索指定内容
	:%s/要替换的内容/替换后的内容/g 	全局替换
	:开始行数,结束行数s/要替换的内容/替换后的内容 	局部替换
	. 	重复上一次命令操作
	G 	回到最后一行
	gg 	回到第一行
	数字+G 	回到指定行
	shift+6 	回到当前行的行首
	shift+4 	回到当前行的行末
	ctr+f 	下一屏
	ctr+b 	上一屏

* 小结

vim 是一款功能强大的命令文本编辑器，可以对远程服务器的代码直接进行修改，这样操作起来更加快速和方便。

.. |image0| image:: /_static/python_ai/czxt.png
.. |image1| image:: /_static/python_ai/czxtzy.png
.. |image2| image:: /_static/python_ai/xnjzy.png
.. |image3| image:: /_static/python_ai/gx.png
.. |image4| image:: /_static/python_ai/nh.png
.. |image5| image:: /_static/python_ai/fxb.png
.. |image6| image:: /_static/python_ai/ls_detail.png
.. |image7| image:: /_static/python_ai/hard-link-1.png
.. |image8| image:: /_static/python_ai/ssh.png
.. |image9| image:: /_static/python_ai/vim_work_mode.png























































































































































































































